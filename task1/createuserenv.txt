#!/bin/bash

# TASK 1 - automated create users and groups from file
# Matt Revell - Operating Systems Concepts 2021
# This batch script automates user and group creation from a CSV file

# basename command to get only filename from uri
# count users created: count=0 (( count++ ))
# use of log file and output also - make function to output and store in log

# FUNCTIONS -----------------------------------------------------------------

function title () {
	clear
	echo 'Task 1 Script to create user environments'
	echo "*****************************************"
	echo " "
}

function end () {
	echo " "
	echo 'Goodbye ...'
}

# if a filename/URI was not supplied as an arguement when running the script
# get an input from the user

function getfilename () {
	local _filename=""
	echo 'No file arguement supplied'
	read -p "Input a filename or URI: " _filename
	echo "$_filename"
}

function getfullname () {
    echo "$1" | cut -d@ -f1
}

function getsurname () {
    echo "$1" | cut -d. -f2
}

function getusername () {
	email=$1

	local fullname=$(getfullname $email)
    
   	local firstinitial=${fullname:0:1}
    
    	local surname=$(getsurname $fullname)
    
    	local user=$firstinitial$surname

    	echo $user
}

function createuser () {
	username=$(getusername $1)
	useradd $username
}

function main () {
	
	# create log file if it doesn't exist - append comments to logfile

	# check if arg/file provided when script executed
	if [ $# -ne 1 ]
	then
		filename=$(getfilename)
	else
		filename=$1
	fi	
	
	# check if a URI or local filename provided and do action depending on this.
	# check if URI or local file
	
	if [[ $filename == *"/"* ]]		# if filename has a / in it then assume URI
	then
		echo "URI provided - checking if file exists on server"
		
		# use wget --spider, if error output redirected then check result true/false
		# The --spider option makes wget just check for the file instead of downloading it, and 2> /dev/null silences wget's stderr output.
		# wget example uri - http://kate.ict.op.ac.nz/~faisalh/IN617linux/users.csv
		# check if uri or local file?
 	
		if [[ `wget -S --spider $filename 2>&1 | grep 'HTTP/1.1 200 OK'` ]]
		then
			echo "File exists on server .. downloading it"
			wget $filename
			onlyfile="$(basename $filename)"
			
		else
			echo "File does not exist on server"
			exit
		fi
	else
		echo "Local filename provided as arguement"

		# Check if file exists in the local folder
		if [ -f "$filename" ]
		then
			echo "File exists in local folder"
		else
			echo "The file does not exist"
			exit
		fi
	
	# filename should now be local			
	# use IFS ; save and restore current/old IFS

	OLDIFS=$IFS
	IFS=";"
	
	while read email username folder
	do
		# Functions for each of these (with checks inside):
		# useradd
		createuser $email

		# usermod
		# groupadd
		# groupmod
		# shared folder create	
	done < $filename
	IFS=$OLDIFS
}

title
main
end
exit
